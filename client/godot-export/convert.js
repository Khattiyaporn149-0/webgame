import fs from "fs";

const inputFile = "collision.json";
const outputFile = "collision_rects.json";

// ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• polygon ‡∏ó‡∏µ‡πà export ‡∏à‡∏≤‡∏Å Godot
const data = JSON.parse(fs.readFileSync(inputFile, "utf8"));
const rects = [];

// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î (Godot ‚Üí ‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏Å‡∏°)
const SHIFT_X = 4096;   // ‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ô‡∏≤‡∏î world 8192
const SHIFT_Y = 4096;   // ‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ô‡∏≤‡∏î world 8192
const SCALE = 1;        // ‡∏ñ‡πâ‡∏≤‡πÅ‡∏°‡∏û‡πÄ‡∏•‡πá‡∏Å/‡πÉ‡∏´‡∏ç‡πà‡∏Å‡∏ß‡πà‡∏≤ ‡∏õ‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ ‡πÄ‡∏ä‡πà‡∏ô 0.5

for (const poly of data) {
  if (poly.type === "polygon" && Array.isArray(poly.points) && poly.points.length > 0) {
    const xs = poly.points.map(p => p.x);
    const ys = poly.points.map(p => p.y);
    const minX = Math.min(...xs);
    const maxX = Math.max(...xs);
    const minY = Math.min(...ys);
    const maxY = Math.max(...ys);

    // ‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏à‡∏≤‡∏Å Godot (‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Å‡∏•‡∏≤‡∏á) ‚Üí ‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏Å‡∏° (‡∏ã‡πâ‡∏≤‡∏¢‡∏ö‡∏ô)
    rects.push({
      x: (minX + SHIFT_X) * SCALE,
      y: (minY + SHIFT_Y) * SCALE,
      w: (maxX - minX) * SCALE,
      h: (maxY - minY) * SCALE
    });
  }
}

// ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
fs.writeFileSync(outputFile, JSON.stringify(rects, null, 2));
console.log(`‚úÖ Converted ${rects.length} polygons into rectangles ‚Üí ${outputFile}`);
console.log(`üì¶ Coordinates shifted by (${SHIFT_X}, ${SHIFT_Y}), scale √ó${SCALE}`);
